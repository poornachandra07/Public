/// Design pattern to handle multiple requests to same shared location/file
using System;
public class Singleton
    {
        private static int counter = 0;
        private static Singleton instance = null;
        public static Singleton GetInstance
        {
            get
            {
                if (instance == null)
                    instance = new Singleton();
                return instance;
            }
        }
        public void PrintLog(string message)
        {
            Console.WriteLine(message);
            //Log file updation logics
        }
    }
public class Program
    {
       public static void Main(string[] args)
        {
            Singleton fromPart1 = Singleton.GetInstance;
            fromPart1.PrintLog("From One Part");
            Singleton fromPart2 = Singleton.GetInstance;
            fromPart2.PrintLog("From Another Part");
            Console.ReadLine();
        }
    }
